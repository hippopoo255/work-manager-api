openapi: 3.0.2
info:
  description: 主な機能：\ \     議事録の記録 \ スケジュール管理・共有 \ ファイル共有 \ チャット \ Task管理等 \ \ key `special-key` to test the authorization     filters.
  version: 1.0.0
  title: 業務支援システム
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:8080/api'
    description: Laravelのローカルserver
tags:
  - name: user
    description: employees
  - name: admin
    description: system administrator
  - name: blog
    description: blog
  - name: chat_room
    description: chat room
  - name: chat_message
    description: chat message
  - name: meeting_record
    description: meeting record
  - name: schedule
    description: schedule
paths:
  /user/current:
    get:
      tags:
        - user
      summary: 現在のユーザーを返す
      description: return current auth object
      operationId: getCurrentUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/EmptyItem'
                  - $ref: '#/components/schemas/User'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
  /login:
    post:
      tags:
        - user
      description: return auth by login_id and password
      operationId: postLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
      responses:
        '200':
          description: OK
          headers:
            Set-Cookie:
              description: laravel_session
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Invalid Data Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      summary: ユーザーログイン
  /logout:
    post:
      tags:
        - user
      description: return logout by login_id and password
      operationId: postLogout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyItem'
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      summary: ユーザーログアウト
  /admin/current:
    get:
      tags:
        - admin
      description: return current admin
      operationId: getCurrentAdmin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/Admin'
                  - $ref: '#/components/schemas/EmptyItem'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      summary: 現在の管理者を返す
  /admin/login:
    post:
      tags:
        - admin
      description: return admin auth by login_id and password
      operationId: postAdminLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        '422':
          description: Invalid Data Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      summary: 管理者ログイン
  /admin/logout:
    post:
      tags:
        - admin
      description: return logout by login_id and password
      operationId: postAdminLogout
      responses:
        '200':
          description: successfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyItem'
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      summary: 管理者ログアウト
  /author/chat_room:
    get:
      security:
        - cookieAuth: []
      tags:
        - chat_room
      operationId: getChatRoom
      description: chat rooms user joined
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatRoom'
          headers: {}
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      summary: 認証者のチャットルーム取得
  '/user/{user_id}/schedule':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    get:
      summary: 特定のユーザのスケジュール一覧
      operationId: getUserIdSchedule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Schedule'
                  - $ref: '#/components/schemas/EmptyItem'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
            application/xml:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      security:
        - cookieAuth: []
      parameters:
        - schema:
            type: string
          in: query
          name: 'sharedMembers:department_code'
          description: 部署コード
      description: 特定のユーザのスケジュール一覧
      tags:
        - schedule
        - user
  /schedule:
    parameters: []
    post:
      summary: スケジュールの作成
      operationId: postSchedule
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
      description: スケジュールの新規作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleForm'
          text/plain:
            schema:
              type: object
              properties: {}
          application/xml:
            schema:
              type: object
              properties: {}
        description: チャットルームの投稿フォーム
      tags:
        - chat_room
      security:
        - cookieAuth: []
    get:
      summary: みんなのデイリースケジュール
      operationId: getSchedule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Schedule'
                  - $ref: '#/components/schemas/EmptyItem'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
            application/xml:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      security:
        - cookieAuth: []
      parameters:
        - schema:
            type: string
          in: query
          name: 'sharedMembers:department_code'
          description: 部署コード
      description: みんなのデイリースケジュール
      tags:
        - schedule
  '/schedule/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: スケジュールの詳細表示
      operationId: getScheduleId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      description: スケジュールの詳細表示
      security:
        - cookieAuth: []
      tags:
        - schedule
    put:
      summary: スケジュールの更新
      operationId: putScheduleId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleForm'
      description: スケジュールの更新
      security:
        - cookieAuth: []
      tags:
        - schedule
    delete:
      summary: スケジュールの削除
      operationId: deleteScheduleId
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      description: スケジュールの削除
      security:
        - cookieAuth: []
      tags:
        - schedule
  /chat_room:
    parameters: []
    post:
      summary: チャットルームの作成
      operationId: postChatRoom
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
      description: チャットルームの新規作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoomForm'
          text/plain:
            schema:
              type: object
              properties: {}
        description: チャットルームの投稿フォーム
      tags:
        - chat_room
      security:
        - cookieAuth: []
  '/chat_room/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: チャットルームの詳細表示
      operationId: getChatRoomId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      description: チャットルームのリストをクリックした時等
      tags:
        - chat_room
      security:
        - cookieAuth: []
    put:
      summary: チャットルームの更新
      operationId: putChatRoomId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoomForm'
      description: ルーム名を変えたいなど
      tags:
        - chat_room
      security:
        - cookieAuth: []
    delete:
      summary: チャットルームの削除
      operationId: deleteChatRoomId
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
            application/xml:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      description: チャットルームの削除
      tags:
        - chat_room
      security:
        - cookieAuth: []
  '/chat_room/{id}/member/{member_id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: member_id
        in: path
        required: true
    delete:
      summary: チャットルームメンバーの削除
      operationId: deleteChatMemberId
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      description: メンバー自身が退室する、管理者が除名する等
      tags:
        - chat_room
      security:
        - cookieAuth: []
  '/chat_room/{id}/message':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: チャットメッセージの追加
      operationId: postChatMessage
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
      description: チャットメッセージの追加
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageForm'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      tags:
        - chat_message
        - chat_room
      security:
        - cookieAuth: []
  '/chat_room/{id}/message/{message_id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: message_id
        in: path
        required: true
    put:
      summary: チャットメッセージの更新
      operationId: putChatMessageId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      description: チャットメッセージの更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageForm'
      tags:
        - chat_message
        - chat_room
      security:
        - cookieAuth: []
    delete:
      summary: チャットメッセージの削除
      operationId: deleteChatMessageId
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      description: チャットメッセージの削除
      tags:
        - chat_message
        - chat_room
      security:
        - cookieAuth: []
  /author/meeting_record:
    get:
      security:
        - cookieAuth: []
      tags:
        - meeting_record
      operationId: getMeetingRecord
      description: meeting record user joined
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/EmptyItem'
                  - $ref: '#/components/schemas/MeetingPage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      summary: 認証者の会議議事録一覧
  /author/blog:
    get:
      security:
        - cookieAuth: []
      operationId: getBlog
      description: blog user joined
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Blog'
                  - $ref: '#/components/schemas/EmptyItem'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
      tags:
        - blog
      parameters:
        - schema:
            type: string
          in: query
          name: written_by
          description: ユーザーコード
        - schema:
            type: integer
          in: query
          name: page
          description: ページ
      summary: 認証者が閲覧できるブログ
    parameters: []
  /meeting_record:
    post:
      summary: 会議議事録の投稿
      tags:
        - meeting_record
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRecord'
        '400':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '422':
          description: Invalid Data Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
      operationId: postMeetingRecord
      description: 議事録の新規投稿
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRecordForm'
            examples:
              example-1:
                value:
                  recorded_by: 1
                  place_id: 1
                  meeting_date: '2020-12-31 23:59:59'
                  title: 全体会議
                  summary: 定例のミーティングです。
                  decisions:
                    - decided_by: 1
                      written_by: 1
                      subject: 〇〇店のクレームについて
                      body: 再発防止策を立てる
                      tasks:
                        - owner_id: 1
                          created_by: 1
                          priority_id: 'null'
                          progress_id: 'null'
                          body: 資料作成
                          time_limit: '2021-12-31 23:59:59'
        description: 議事録投稿フォーム
    parameters: []
  '/meeting_record/{id}':
    put:
      summary: 会議議事録の更新
      operationId: putMeetingRecordId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRecord'
        '400':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '422':
          description: Invalid Data Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidError'
      security:
        - cookieAuth: []
      description: 議事録の更新フォーム
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRecordForm'
      tags:
        - meeting_record
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: 会議議事録ID
    get:
      summary: 会議議事録の詳細表示
      operationId: getMeetingRecordId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRecord'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
      security:
        - cookieAuth: []
      description: 議事録の詳細情報取得
      tags:
        - meeting_record
    delete:
      summary: 会議議事録の削除
      operationId: deleteMeetingRecordId
      responses:
        '204':
          description: DELETE
          content:
            application/json:
              schema:
                nullable: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
      description: 議事録の削除
      security:
        - cookieAuth: []
      tags:
        - meeting_record
components:
  schemas:
    Admin:
      title: Admin
      type: object
      description: 認証時のデータ
      required:
        - id
        - full_name
        - created_at
        - updated_at
      properties:
        id:
          description: ユーザーID
          type: integer
        full_name:
          description: フルネーム
          type: string
          example: 管理者 太郎
        given_name:
          description: 名
          type: string
          example: 太郎
        family_name:
          description: 姓
          type: string
          example: 管理者
        file_path:
          nullable: true
          description: ファイルパス
          type: string
          example: admins/test1.jpg
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
    ChatMessage:
      title: ChatMessage
      description: チャットメッセージ
      required:
        - id
        - written_by
        - body
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        body:
          type: string
        written_by:
          $ref: '#/components/schemas/User'
        to:
          anyOf:
            - type: string
              nullable: true
            - $ref: '#/components/schemas/User'
        images:
          anyOf:
            - $ref: '#/components/schemas/EmptyItem'
            - type: array
              items:
                $ref: '#/components/schemas/ChatMessageImage'
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
    ChatMessageImage:
      title: ChatMessageImage
      description: チャット画像
      required:
        - id
        - file_path
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        chat_message_id:
          type: integer
          format: int64
        file_path:
          type: string
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
    ChatRoom:
      title: ChatRoom
      description: チャットルーム
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        members:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/User'
        messages:
          anyOf:
            - $ref: '#/components/schemas/EmptyItem'
            - type: array
              items:
                $ref: '#/components/schemas/ChatMessage'
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
      required:
        - id
        - name
        - members
        - messages
        - created_at
        - updated_at
    Schedule:
      title: Schedule
      description: スケジュール
      type: object
      x-examples:
        example-1:
          value:
            id: 0
            scheduled_by: 0
            content: string
            start_date: '2019-08-24T14:15:22Z'
            end_date: '2019-08-24T14:15:22Z'
            is_public: true
            color: string
            messages: []
            shared_members:
              - id: 0
                full_name: テスト 太郎
                given_name: 太郎
                family_name: テスト
                file_path: users/test1.jpg
                created_at: '2021-12-31 12:00:00'
                updated_at: '2021-12-31 12:00:00'
            created_at: '2021-12-31 12:00:00'
            updated_at: '2021-12-31 12:00:00'
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
        scheduled_by:
          $ref: '#/components/schemas/User'
        content:
          type: string
        start_date:
          $ref: '#/components/schemas/DateFormat'
        end_date:
          $ref: '#/components/schemas/DateFormat'
        is_public:
          type: boolean
          default: true
        color:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
        shared_members:
          anyOf:
            - items:
                $ref: '#/components/schemas/User'
          type: array
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
      required:
        - id
        - scheduled_by
        - content
        - start_date
        - end_date
        - shared_members
        - created_at
        - updated_at
    DateFormat:
      type: string
      format: date-time
      example: '2021-12-31 12:00:00'
    DefaultError:
      title: DefaultError
      description: DefaultError
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
    ForbiddenError:
      title: ForbiddenError
      description: ForbiddenError
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
    NotFoundError:
      title: NotFoundError
      description: NotFoundError
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
    EmptyItem:
      title: EmptyItem
      description: データがないときの空配列
      type: array
      example: []
      items:
        nullable: true
    InvalidError:
      title: InvalidError
      description: InvalidError
      type: object
      properties:
        message:
          description: エラーメッセージ
          type: string
        errors:
          description: フォームアイテムごとのエラーメッセージ
          type: object
          additionalProperties: {}
    LoginBody:
      title: LoginBody
      description: ログインIDとパスワードのフォーム
      required:
        - login_id
        - password
      type: object
      properties:
        login_id:
          type: string
          example: testman1
        password:
          type: string
          format: password
          example: password
    MeetingRecordForm:
      title: MeetingRecordForm
      description: 会議議事録投稿フォーム
      type: object
      properties:
        recorded_by:
          type: integer
          example: 1
          format: int64
          minimum: 0
          exclusiveMinimum: true
        place_id:
          type: integer
          format: int64
          example: 1
          nullable: true
        meeting_date:
          $ref: '#/components/schemas/DateFormat'
        title:
          type: string
          example: 全体会議
        summary:
          type: string
          example: これは全体の会議です。
          nullable: true
        meeting_decisions:
          example: これは全体の会議です。
          type: array
          items:
            $ref: '#/components/schemas/MeetingDecisionForm'
        members:
          type: array
          items:
            type: integer
      required:
        - recorded_by
        - meeting_date
        - title
    MeetingDecisionForm:
      title: MeetingDecisionForm
      description: ミーティング決定事項フォーム
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        decided_by:
          type: integer
          example: 1
          format: int64
          nullable: true
        written_by:
          type: integer
          example: 1
          minimum: 0
          exclusiveMinimum: true
          format: int64
        subject:
          type: string
          example: 〇〇について
          nullable: true
        body:
          type: string
          example: 来月から〇〇とする
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskForm'
      required:
        - written_by
        - body
    TaskForm:
      title: TaskForm
      description: TODOの投稿フォーム
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        owner_id:
          type: integer
          format: int64
          example: 1
          minimum: 0
          exclusiveMinimum: true
        created_by:
          type: integer
          format: int64
          example: 1
        priority_id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
          nullable: true
        progress_id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
          nullable: true
        body:
          type: string
        time_limit:
          $ref: '#/components/schemas/DateFormat'
      required:
        - owner_id
        - created_by
        - body
        - time_limit
    ChatRoomForm:
      title: ChatRoomForm
      description: ChatRoomの投稿フォーム
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        created_by:
          type: integer
          format: int64
          example: 1
          nullable: true
        name:
          type: string
          nullable: true
        members:
          type: object
      required:
        - created_by
        - name
    ChatMessageForm:
      title: ChatMessageForm
      description: ChatMessageの投稿フォーム
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        written_by:
          type: integer
          format: int64
          example: 1
        mentioned_to:
          type: integer
          format: int64
          example: 1
          nullable: true
        body:
          type: string
        files:
          type: array
          maxItems: 5
          minItems: 0
          items:
            type: object
            nullable: true
      required:
        - written_by
        - mentioned_to
        - body
    ScheduleForm:
      title: ScheduleForm
      description: ChatRoomの投稿フォーム
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        scheduled_by:
          type: integer
          format: int64
          example: 1
          minimum: 0
        content:
          format: int64
          example: 1
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        is_public:
          type: boolean
          format: date-time
          default: true
          nullable: true
        color:
          type: string
          default: 'true'
          nullable: true
        memo:
          type: string
          default: 'true'
          nullable: true
        sharedMembers:
          type: object
      required:
        - scheduled_by
        - content
        - start_date
        - end_date
        - is_public
        - color
        - memo
    MeetingDecision:
      title: MeetingDecision
      description: ミーティング決定事項
      type: object
      properties:
        id:
          type: integer
          format: int64
        decided_by:
          $ref: '#/components/schemas/User'
        written_by:
          $ref: '#/components/schemas/User'
        subject:
          type: string
        body:
          type: string
        tasks:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Task'
              - $ref: '#/components/schemas/EmptyItem'
      required:
        - id
        - decided_by
        - written_by
        - subject
        - body
    MeetingPage:
      title: MeetingPage
      description: 議事録一覧のページ（ページャつき）
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MeetingRecord'
        first_page_url:
          description: 1ページ目のURL
          type: string
        from:
          description: 現在のitemの開始位置
          type: integer
          nullable: true
        last_page:
          description: 最大ページ数
          type: integer
        last_page_url:
          description: 最終ページのURL
          type: string
        next_page_url:
          description: 次ページのURL
          type: string
          nullable: true
        path:
          description: 前ページのURL
          type: string
        per_page:
          description: 1ページあたりのアイテム数
          type: integer
        prev_page_url:
          description: 前ページのURL
          type: string
          nullable: true
        to:
          description: 現在のitemの終了位置
          type: integer
          nullable: true
        total:
          description: item総数
          type: integer
      required:
        - data
        - first_page_url
        - from
        - last_page
        - last_page_url
        - next_page_url
        - path
        - per_page
        - prev_page_url
        - to
        - total
    MeetingPlace:
      title: MeetingPlace
      description: ミーティング開催場所
      required:
        - id
        - name
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
    MeetingRecord:
      title: MeetingRecord
      description: ミーティングレコード
      type: object
      properties:
        id:
          type: integer
          format: int64
        recorded_by:
          $ref: '#/components/schemas/User'
        meeting_date:
          $ref: '#/components/schemas/DateFormat'
        place:
          anyOf:
            - type: string
              nullable: true
            - $ref: '#/components/schemas/MeetingPlace'
        title:
          type: string
          example: 〇〇会議
        summary:
          type: string
          example: 〇〇会議の概要
          nullable: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
        decisions:
          anyOf:
            - $ref: '#/components/schemas/EmptyItem'
            - type: array
              items:
                $ref: '#/components/schemas/MeetingDecision'
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
      required:
        - id
        - recorded_by
        - meeting_date
        - place
        - title
        - summary
        - members
        - decisions
        - created_at
        - updated_at
    Priority:
      title: Priority
      description: TODOの優先度
      required:
        - id
        - name
        - value
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          description: 優先度
          type: string
        value:
          description: 優先値
          type: integer
          format: int64
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
    Progress:
      title: Progress
      description: TODOの達成度
      required:
        - id
        - name
        - value
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          description: 達成度
          type: string
        value:
          description: 達成値
          type: integer
          format: int64
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
    Role:
      title: Role
      description: ロール
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          description: 権限名
          type: string
        value:
          type: integer
          description: 権限値
          format: int64
          minimum: 0
          exclusiveMinimum: true
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
      required:
        - id
        - name
        - value
        - created_at
        - updated_at
    Task:
      title: Task
      description: TODO
      required:
        - id
        - owner
        - created_by
        - priority
        - progress
        - body
        - time_limit
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int64
        meeting_record_id:
          type: integer
          format: int64
          example: 1
          nullable: true
        owner:
          $ref: '#/components/schemas/User'
        priority:
          $ref: '#/components/schemas/Priority'
        progress:
          $ref: '#/components/schemas/Progress'
        body:
          type: string
        time_limit:
          $ref: '#/components/schemas/DateFormat'
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
    User:
      title: User
      description: ユーザーのデータ
      type: object
      required:
        - id
        - full_name
        - created_at
        - updated_at
      properties:
        id:
          description: ユーザーID
          type: integer
        full_name:
          description: フルネーム
          type: string
          example: テスト 太郎
        given_name:
          description: 名
          type: string
          example: 太郎
        family_name:
          description: 姓
          type: string
          example: テスト
        file_path:
          nullable: true
          description: ファイルパス
          type: string
          example: users/test1.jpg
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
    Blog:
      title: Blog
      description: ブログ
      type: object
      properties:
        id:
          type: integer
          format: int64
        written_by:
          $ref: '#/components/schemas/User'
        role:
          $ref: '#/components/schemas/Role'
        title:
          type: string
          description: タイトル
        body:
          type: string
          description: 記事の内容
        created_at:
          $ref: '#/components/schemas/DateFormat'
        updated_at:
          $ref: '#/components/schemas/DateFormat'
      required:
        - id
        - written_by
        - role
        - title
        - body
        - created_at
        - updated_at
  securitySchemes:
    cookieAuth:
      name: _session
      type: apiKey
      in: cookie
      description: ''
